% 3-2
% prolongue code - 3b
PUSHMIT
PUSH UNDEFINED
SWAP
PUSH (frame pointer)
LOAD
SWAP
PUSH (display LL)
LOAD
SWAP
DUP
PUSH (display LL)
SWAP
STORE
PUSH (frame pointer)
SWAP
STORE 

% epilogue code - 3c
PUSHMT
PUSH (frame pointer)
LOAD
SUB
PUSH 4            % control data
ADD
POPN
SWAP
PUSH (LL location)
LOAD
PUSH (m)
SWAP
SUB
SWAP
STORE
SWAP
PUSH (LL location)
SWAP
STORE
BR

% Local storage for 3-3
PUSH UNDEFINED    % Integer a, offset = 4, LL = 0
PUSH UNDEFINED    % Integer b, offset = 5, LL = 0
PUSH UNDEFINED    % Integer c, offset = 6, LL = 0
PUSH UNDEFINED    % Integer d, offset = 7, LL = 0

% Local storage for 3-4
PUSH UNDEFINED    % Boolean p, offset = 8, LL = 0
PUSH UNDEFINED    % Boolean q, offset = 9, LL = 0
PUSH UNDEFINED    % Boolean r, offset = 10, LL = 0
PUSH UNDEFINED    % Boolean s, offset = 11, LL = 0

% 3-7
PUSH UNDEFINED    % Integer e, offset = 4, LL = 1
PUSH UNDEFINED    % Integer f, offset = 5, LL = 1

% 3-8
ADDR 0 5          % q addr
LOAD              % q value
PUSH (after true)
BF
PUSH (exit routine)
BR                % return
                  % after true

% 3-9
ADDR 0 4          % a addr
LOAD
ADDR 1 4          % local e addr
SWAP
STORE             % e := a

% 3-10
PUSH (exit routine)
BR                % return 

% 3-11
PUSH 2
POPN

% 3-12
PUSH UNDEFINED    % Integer m, offset = 12, LL = 0
PUSH UNDEFINED    % Integer n, offset = 13, LL = 0

ADDR 0 13         % local n addr
LOAD              % local n value
PUSH (false addr)
BF
ADDR 0 12         % local m addr
LOAD
ADDR 0 5          % b addr
LOAD
ADD               % m + b
PUSH (frame pointer)
LOAD
SWAP
STORE
PUSH (exit routine)
BR
PUSH (after false addr)
BR
ADDR 0 6          % global c addr
LOAD              % global c value
ADDR 0 12         % local m addr
LOAD              % local m value
SUB               % c - m
PUSH (frame pointer)
LOAD
SWAP
STORE
PUSH (routine exit)
                 % after false

% 3-15
PUSH 2
POPN

% 3-16
PUSH UNDEFINED    % Integer m, offset = 12, LL = 0
PUSH UNDEFINED    % Integer n, offset = 13, LL = 0
PUSH UNDEFINED    % Integer p, offset = 14, LL = 0

% 3-18
PUSH UNDEFINED    % Integer t, offset = 6, LL = 1
PUSH UNDEFINED    % Integer u, offset = 7, LL = 1
PUSH UNDEFINED    % Integer v, offset = 8, LL = 1

% 3-21
PUSH UNDEFINED    % Integer w, offset = 4, LL = 2
PUSH UNDEFINED    % Integer x, offset = 5, LL = 2

% 3-23

ADDR 0 12         % m addr
LOAD              % m value
ADDR 0 14         % p addr
LOAD              % p value
OR                % m or p
PUSH (false body)
BF
ADDR 1 8          % v addr
LOAD              % v value
ADDR 0 13         % n addr
LOAD              % n value
PUSH (after false body)
BR
ADDR 1 7         % u addr - false body
LOAD             % u value
ADDR 0 5         % b addr
LOAD             % b value
SUB              % u - b, (  m or p ? v + n : u - b )
PUSH (frame pointer)
LOAD
SWAP
STORE
PUSH (exit routine)
BR                % return with (  m or p ? v + n : u - b )

% 3-25
PUSH 2
POPN

% 3-26
PUSHMT
SETD 2
PUSH (M-33)
PUSH 2
STORE
PUSH (return from 3b)
BR
PUSH (entry)
BR
PUSH (return addr)
PUSH (START)
BR
PUSH (M-33)
PUSH 1
PUSH (M-2)
LOAD
SETD 1           % call G
PUSH 7
LT                % G < 7
PUSH (after true)
BF
PUSH (routine exit)
BR

% 3-27
PUSHMT
SETD 2
PUSH (M-33)
PUSH 2
STORE
PUSH (return from 3b)
BR
PUSH (entry)
BR
PUSH (return addr)
ADDR 1 6         % t addr
LOAD
PUSH MACHINE_TRUE
ADDR 0 10        % r addr
LOAD             % r value
SUB              % not r
PUSH (START)
BR
PUSH (M-33)
PUSH 1
PUSH (M-2)
LOAD
SETD 1           % call F
PUSH 17
EQ               % F = 17
PUSH (after true)
BF
PUSH (routine exit)
BR

% 3-28
PUSHMT
SETD 2
PUSH (M-33)
PUSH 2
STORE
PUSH (return from 3b)
BR
PUSH (entry)
BR
PUSH (return addr)
PUSH (START)
BR
PUSH (M-33)
PUSH 1
PUSH (M-2)
LOAD
SETD 1           % call P

% 3-29
PUSH 3
POPN

% 3-30
PUSHMT
SETD 1
PUSH (M-33)
PUSH 1
STORE
PUSH (return from 3b)
BR
PUSH (entry)
BR
PUSH (return addr)
PUSH MACHINE_TRUE
ADDR 0 8          % p addr
LOAD              % p value
SUB               % not p
ADDR 0 5          % q addr
LOAD              % q value
OR                % not p or q
ADDR 0 5          % b addr
LOAD
ADDR 0 6          % c addr
LOAD              % c value
MULT              % b * c
ADDR 0 8          % p addr
LOAD              % p value
ADDR 0 9          % q addr
LOAD              % q value
LT
ADDR 0 9          % q addr
LOAD              % q value
ADDR 0 8          % p addr
LOAD              % p value
LT
OR                % p not= q
PUSH (START)
BR
PUSH (M-33)
PUSH 0
PUSH (M-1)
LOAD
SETD 0           % call Q

% 3-31
PUSH 8
POPN

HALT
